From 37e0ae50070c1c626c0b153c43a178ada3bf83ca Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Wed, 16 Mar 2016 22:36:28 +0000
Subject: [PATCH 1/5] ENTMQCL-309: QPID-7146: Fix function binding error

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1735325 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/src/qpid/sys/rdma/RdmaClient.cpp | 8 ++++----
 qpid/cpp/src/qpid/sys/rdma/RdmaServer.cpp | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/qpid/cpp/src/qpid/sys/rdma/RdmaClient.cpp b/qpid/cpp/src/qpid/sys/rdma/RdmaClient.cpp
index 504000a..9bb82b4 100644
--- a/qpid/cpp/src/qpid/sys/rdma/RdmaClient.cpp
+++ b/qpid/cpp/src/qpid/sys/rdma/RdmaClient.cpp
@@ -160,7 +160,7 @@ void drained(Rdma::AsynchIO&) {
     cout << "Drained:\n";
 }
 
-void connected(Poller::shared_ptr poller, Rdma::Connection::intrusive_ptr& ci, const Rdma::ConnectionParams& cp) {
+void connected(Poller::shared_ptr poller, const Rdma::Connection::intrusive_ptr& ci, const Rdma::ConnectionParams& cp) {
     cout << "Connected\n";
     Rdma::QueuePair::intrusive_ptr q = ci->getQueuePair();
 
@@ -178,17 +178,17 @@ void connected(Poller::shared_ptr poller, Rdma::Connection::intrusive_ptr& ci, c
     aio->start(poller);
 }
 
-void disconnected(boost::shared_ptr<Poller> p, Rdma::Connection::intrusive_ptr&) {
+void disconnected(boost::shared_ptr<Poller> p, const Rdma::Connection::intrusive_ptr&) {
     cout << "Disconnected\n";
     p->shutdown();
 }
 
-void connectionError(boost::shared_ptr<Poller> p, Rdma::Connection::intrusive_ptr&, const Rdma::ErrorType) {
+void connectionError(boost::shared_ptr<Poller> p, const Rdma::Connection::intrusive_ptr&, const Rdma::ErrorType) {
     cout << "Connection error\n";
     p->shutdown();
 }
 
-void rejected(boost::shared_ptr<Poller> p, Rdma::Connection::intrusive_ptr&, const Rdma::ConnectionParams&) {
+void rejected(boost::shared_ptr<Poller> p, const Rdma::Connection::intrusive_ptr&, const Rdma::ConnectionParams&) {
     cout << "Connection rejected\n";
     p->shutdown();
 }
diff --git a/qpid/cpp/src/qpid/sys/rdma/RdmaServer.cpp b/qpid/cpp/src/qpid/sys/rdma/RdmaServer.cpp
index 9b0710f..3764792 100644
--- a/qpid/cpp/src/qpid/sys/rdma/RdmaServer.cpp
+++ b/qpid/cpp/src/qpid/sys/rdma/RdmaServer.cpp
@@ -119,7 +119,7 @@ void drained(Rdma::AsynchIO&) {
     cout << "Drained:\n";
 }
 
-void disconnected(Rdma::Connection::intrusive_ptr& ci) {
+void disconnected(const Rdma::Connection::intrusive_ptr& ci) {
     ConRec* cr = ci->getContext<ConRec>();
     cr->connection->disconnect();
     cr->data->drainWriteQueue(drained);
@@ -127,7 +127,7 @@ void disconnected(Rdma::Connection::intrusive_ptr& ci) {
     cout << "Disconnected: " << cr << "\n";
 }
 
-void connectionError(Rdma::Connection::intrusive_ptr& ci, Rdma::ErrorType) {
+void connectionError(const Rdma::Connection::intrusive_ptr& ci, Rdma::ErrorType) {
     ConRec* cr = ci->getContext<ConRec>();
     cr->connection->disconnect();
     if (cr) {
@@ -137,7 +137,7 @@ void connectionError(Rdma::Connection::intrusive_ptr& ci, Rdma::ErrorType) {
     cout << "Connection error: " << cr << "\n";
 }
 
-bool connectionRequest(Rdma::Connection::intrusive_ptr& ci,  const Rdma::ConnectionParams& cp) {
+bool connectionRequest(const Rdma::Connection::intrusive_ptr& ci,  const Rdma::ConnectionParams& cp) {
     cout << "Incoming connection: ";
 
     // For fun reject alternate connection attempts
@@ -165,7 +165,7 @@ bool connectionRequest(Rdma::Connection::intrusive_ptr& ci,  const Rdma::Connect
     return x;
 }
 
-void connected(Poller::shared_ptr poller, Rdma::Connection::intrusive_ptr& ci) {
+void connected(Poller::shared_ptr poller, const Rdma::Connection::intrusive_ptr& ci) {
     static int cnt = 0;
     ConRec* cr = ci->getContext<ConRec>();
     cout << "Connected: " << cr << "(" << ++cnt << ")\n";
-- 
1.8.3.1

From 345be26f5a969534058ba8946b5141d82a41bab4 Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Wed, 16 Mar 2016 22:36:32 +0000
Subject: [PATCH 2/5] ENTMQCL-309: QPID-7146: Remove (via preprocessor) unused
 code

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1735326 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/src/qpid/broker/DtxManager.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/qpid/cpp/src/qpid/broker/DtxManager.cpp b/qpid/cpp/src/qpid/broker/DtxManager.cpp
index 4fb82bb..61dfad2 100644
--- a/qpid/cpp/src/qpid/broker/DtxManager.cpp
+++ b/qpid/cpp/src/qpid/broker/DtxManager.cpp
@@ -38,6 +38,7 @@ using qpid::ptr_map_ptr;
 using namespace qpid::broker;
 using namespace qpid::framing;
 
+#if DEFINE_UNUSED
 namespace {
     typedef boost::function0<void> FireFunction;
     struct DtxCleanup : public qpid::sys::TimerTask
@@ -61,6 +62,7 @@ namespace {
     }
 
 }
+#endif
 
 DtxManager::DtxManager(qpid::sys::Timer& t, uint32_t _dtxDefaultTimeout) :
     store(0),
-- 
1.8.3.1

From ee755669fdec52901002428fa5191ced7e2ccf64 Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Wed, 16 Mar 2016 22:36:35 +0000
Subject: [PATCH 3/5] ENTMQCL-309: QPID-7146: Fix indentation error picked up
 by compiler

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1735327 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/src/qpid/broker/SessionManager.cpp | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/qpid/cpp/src/qpid/broker/SessionManager.cpp b/qpid/cpp/src/qpid/broker/SessionManager.cpp
index a39cbab..7195e73 100644
--- a/qpid/cpp/src/qpid/broker/SessionManager.cpp
+++ b/qpid/cpp/src/qpid/broker/SessionManager.cpp
@@ -69,12 +69,13 @@ void  SessionManager::detach(std::auto_ptr<SessionState> session) {
     attached.erase(session->getId());
     session->detach();
     if (session->getTimeout() > 0) {
-    session->expiry = AbsTime(now(), session->getTimeout()*TIME_SEC);
-    if (session->mgmtObject != 0)
-        session->mgmtObject->set_expireTime (Duration::FromEpoch()+session->getTimeout()*TIME_SEC);
+        session->expiry = AbsTime(now(), session->getTimeout()*TIME_SEC);
+        if (session->mgmtObject != 0) {
+            session->mgmtObject->set_expireTime (Duration::FromEpoch()+session->getTimeout()*TIME_SEC);
+        }
         detached.push_back(session.release()); // In expiry order
-    eraseExpired();
-}
+        eraseExpired();
+    }
 }
 
 void SessionManager::forget(const SessionId& id) {
-- 
1.8.3.1

From 0ce33631e301aa694feb7ea48f2525ed7662f925 Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Wed, 16 Mar 2016 22:36:38 +0000
Subject: [PATCH 4/5] ENTMQCL-309: QPID-7145: Don't warn for using deprecated
 declarations (auto_ptr is now deprecated)

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1735328 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/qpid/cpp/CMakeLists.txt b/qpid/cpp/CMakeLists.txt
index 3b1890f..15fcc0c 100644
--- a/qpid/cpp/CMakeLists.txt
+++ b/qpid/cpp/CMakeLists.txt
@@ -144,7 +144,7 @@ if (CMAKE_CXX_COMPILER_ID STREQUAL GNU)
    # -Wunreachable-code -Wpadded -Winline
    # -Wshadow - warns about boost headers.
    set (WARNING_FLAGS
-        "-Werror -pedantic -Wall -Wextra -Wno-shadow -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wvolatile-register-var -Winvalid-pch -Wno-system-headers -Woverloaded-virtual")
+        "-Werror -pedantic -Wall -Wextra -Wno-shadow -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wvolatile-register-var -Winvalid-pch -Wno-system-headers -Woverloaded-virtual -Wno-error=deprecated-declarations")
 
    set (CATCH_UNDEFINED "-Wl,--no-undefined")
    # gcc on SunOS uses native linker whose "-z defs" is too fussy
-- 
1.8.3.1

From 42cc0657da28e5d3eb028cb739e219ba834217c2 Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Wed, 16 Mar 2016 22:36:42 +0000
Subject: [PATCH 5/5] ENTMQCL-309: QPID-7147: Renamed bind to avoid clash with
 (new for C++11/14) std::bind - The compiler was finding std::bind in
 preference due to argument dependent lookup.

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1735329 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/src/qpid/messaging/amqp/AddressHelper.cpp | 34 +++++++++++-----------
 1 file changed, 17 insertions(+), 17 deletions(-)

diff --git a/qpid/cpp/src/qpid/messaging/amqp/AddressHelper.cpp b/qpid/cpp/src/qpid/messaging/amqp/AddressHelper.cpp
index 8033cc5..38ebac4 100644
--- a/qpid/cpp/src/qpid/messaging/amqp/AddressHelper.cpp
+++ b/qpid/cpp/src/qpid/messaging/amqp/AddressHelper.cpp
@@ -159,7 +159,7 @@ template <typename T> T get(const Variant::Map& options, const std::string& name
     }
 }
 
-bool bind(const Variant::Map& options, const std::string& name, std::string& variable)
+bool getOption(const Variant::Map& options, const std::string& name, std::string& variable)
 {
     Variant::Map::const_iterator j = options.find(name);
     if (j == options.end()) {
@@ -170,7 +170,7 @@ bool bind(const Variant::Map& options, const std::string& name, std::string& var
     }
 }
 
-bool bind(const Variant::Map& options, const std::string& name, Variant::Map& variable)
+bool getOption(const Variant::Map& options, const std::string& name, Variant::Map& variable)
 {
     Variant::Map::const_iterator j = options.find(name);
     if (j == options.end()) {
@@ -181,7 +181,7 @@ bool bind(const Variant::Map& options, const std::string& name, Variant::Map& va
     }
 }
 
-bool bind(const Variant::Map& options, const std::string& name, Variant::List& variable)
+bool getOption(const Variant::Map& options, const std::string& name, Variant::List& variable)
 {
     Variant::Map::const_iterator j = options.find(name);
     if (j == options.end()) {
@@ -192,14 +192,14 @@ bool bind(const Variant::Map& options, const std::string& name, Variant::List& v
     }
 }
 
-bool bind(const Address& address, const std::string& name, std::string& variable)
+bool getAddressOption(const Address& address, const std::string& name, std::string& variable)
 {
-    return bind(address.getOptions(), name, variable);
+    return getOption(address.getOptions(), name, variable);
 }
 
-bool bind(const Address& address, const std::string& name, Variant::Map& variable)
+bool getAddressOption(const Address& address, const std::string& name, Variant::Map& variable)
 {
-    return bind(address.getOptions(), name, variable);
+    return getOption(address.getOptions(), name, variable);
 }
 
 bool in(const std::string& value, const std::vector<std::string>& choices)
@@ -249,20 +249,20 @@ AddressHelper::AddressHelper(const Address& address) :
     browse(false)
 {
     verifier.verify(address);
-    bind(address, CREATE, createPolicy);
-    bind(address, DELETE, deletePolicy);
-    bind(address, ASSERT, assertPolicy);
-
-    bind(address, NODE, node);
-    bind(address, LINK, link);
-    bind(node, PROPERTIES, properties);
-    bind(node, CAPABILITIES, capabilities);
-    bind(link, RELIABILITY, reliability);
+    getAddressOption(address, CREATE, createPolicy);
+    getAddressOption(address, DELETE, deletePolicy);
+    getAddressOption(address, ASSERT, assertPolicy);
+
+    getAddressOption(address, NODE, node);
+    getAddressOption(address, LINK, link);
+    getOption(node, PROPERTIES, properties);
+    getOption(node, CAPABILITIES, capabilities);
+    getOption(link, RELIABILITY, reliability);
     durableNode = test(node, DURABLE);
     durableLink = test(link, DURABLE);
     timeout = get(link, TIMEOUT, durableLink && reliability != AT_LEAST_ONCE ? DEFAULT_DURABLE_TIMEOUT : DEFAULT_TIMEOUT);
     std::string mode;
-    if (bind(address, MODE, mode)) {
+    if (getAddressOption(address, MODE, mode)) {
         if (mode == BROWSE) {
             browse = true;
         } else if (mode != CONSUME) {
-- 
1.8.3.1

