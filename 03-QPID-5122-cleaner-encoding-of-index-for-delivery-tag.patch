From 69d1ac622c2db4d357365d03e26eb34c8b992a44 Mon Sep 17 00:00:00 2001
From: Gordon Sim <gsim@apache.org>
Date: Tue, 10 Sep 2013 11:03:20 +0000
Subject: [PATCH] QPID-5122: cleaner encoding of index for delivery tags

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1521433 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/src/qpid/broker/amqp/Outgoing.cpp | 18 ++++++++++++++----
 qpid/cpp/src/qpid/broker/amqp/Outgoing.h   |  3 +++
 2 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/qpid/cpp/src/qpid/broker/amqp/Outgoing.cpp b/qpid/cpp/src/qpid/broker/amqp/Outgoing.cpp
index eb18582..5bcdf67 100644
--- a/qpid/cpp/src/qpid/broker/amqp/Outgoing.cpp
+++ b/qpid/cpp/src/qpid/broker/amqp/Outgoing.cpp
@@ -29,6 +29,7 @@
 #include "qpid/sys/OutputControl.h"
 #include "qpid/amqp/descriptors.h"
 #include "qpid/amqp/MessageEncoder.h"
+#include "qpid/framing/Buffer.h"
 #include "qpid/framing/reply_exceptions.h"
 #include "qpid/log/Statement.h"
 
@@ -91,8 +92,7 @@ void OutgoingFromQueue::write(const char* data, size_t size)
 
 void OutgoingFromQueue::handle(pn_delivery_t* delivery)
 {
-    pn_delivery_tag_t tag = pn_delivery_tag(delivery);
-    size_t i = *reinterpret_cast<const size_t*>(tag.bytes);
+    size_t i = Record::getIndex(pn_delivery_tag(delivery));
     Record& r = deliveries[i];
     if (pn_delivery_writable(delivery)) {
         assert(r.msg);
@@ -254,8 +254,10 @@ OutgoingFromQueue::Record::Record() : delivery(0), disposition(0), index(0) {}
 void OutgoingFromQueue::Record::init(size_t i)
 {
     index = i;
-    tag.bytes = reinterpret_cast<const char*>(&index);
-    tag.size = sizeof(index);
+    qpid::framing::Buffer buffer(tagData, Record::TAG_WIDTH);
+    buffer.putUInt<Record::TAG_WIDTH>(index);
+    tag.bytes = tagData;
+    tag.size = Record::TAG_WIDTH;
 }
 void OutgoingFromQueue::Record::reset()
 {
@@ -265,5 +267,13 @@ void OutgoingFromQueue::Record::reset()
     disposition = 0;
 }
 
+size_t OutgoingFromQueue::Record::getIndex(pn_delivery_tag_t t)
+{
+    assert(t.size == TAG_WIDTH);
+    qpid::framing::Buffer buffer(const_cast<char*>(t.bytes)/*won't ever be written to*/, t.size);
+    return (size_t) buffer.getUInt<TAG_WIDTH>();
+}
+
+
 
 }}} // namespace qpid::broker::amqp
diff --git a/qpid/cpp/src/qpid/broker/amqp/Outgoing.h b/qpid/cpp/src/qpid/broker/amqp/Outgoing.h
index 86d7d46..b53f67f 100644
--- a/qpid/cpp/src/qpid/broker/amqp/Outgoing.h
+++ b/qpid/cpp/src/qpid/broker/amqp/Outgoing.h
@@ -117,10 +117,13 @@ class OutgoingFromQueue : public Outgoing, public qpid::broker::Consumer, public
         int disposition;
         size_t index;
         pn_delivery_tag_t tag;
+        static const size_t TAG_WIDTH = sizeof(size_t);
+        char tagData[TAG_WIDTH];//index in encoded form, used for tag
 
         Record();
         void init(size_t i);
         void reset();
+        static size_t getIndex(pn_delivery_tag_t);
     };
 
     const bool exclusive;
-- 
1.8.3.1

