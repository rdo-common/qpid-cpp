From bf274f3b6c6fa7ef2dccb2fefa0101850e20d3d6 Mon Sep 17 00:00:00 2001
From: "Darryl L. Pierce" <mcpierce@apache.org>
Date: Fri, 7 Feb 2014 13:44:03 +0000
Subject: [PATCH 4/7] QPID-5499: Fix Ruby/Perl bindings when built with
 -Werror=format-security

Changed the swig descriptors so that they use a constant format string.

git-svn-id: https://svn.apache.org/repos/asf/qpid/trunk@1565651 13f79535-47bb-0310-9956-ffa450edef68
---
 qpid/cpp/bindings/qmf2/ruby/ruby.i         |  2 +-
 qpid/cpp/bindings/qpid/perl/perl.i         |  2 +-
 qpid/cpp/bindings/qpid/ruby/ruby.i         | 42 +++++++++++++++---------------
 qpid/cpp/include/qpid/swig_perl_typemaps.i |  2 +-
 qpid/cpp/include/qpid/swig_ruby_typemaps.i |  2 +-
 5 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/qpid/cpp/bindings/qmf2/ruby/ruby.i b/qpid/cpp/bindings/qmf2/ruby/ruby.i
index 0254017..65d0770 100644
--- a/qpid/cpp/bindings/qmf2/ruby/ruby.i
+++ b/qpid/cpp/bindings/qmf2/ruby/ruby.i
@@ -30,7 +30,7 @@
     }
     catch (qpid::types::Exception& mex) {
         static VALUE qmferror = rb_define_class("QmfError", rb_eStandardError);
-        rb_raise(qmferror, mex.what());
+        rb_raise(qmferror, "%s", mex.what());
     }
 }
 
diff --git a/qpid/cpp/bindings/qpid/perl/perl.i b/qpid/cpp/bindings/qpid/perl/perl.i
index 0d118ae..4dc2665 100644
--- a/qpid/cpp/bindings/qpid/perl/perl.i
+++ b/qpid/cpp/bindings/qpid/perl/perl.i
@@ -27,7 +27,7 @@
         $action
     }
     catch (qpid::messaging::MessagingException& mex) {
-        Perl_croak(aTHX_ mex.what());
+      Perl_croak(aTHX_ "%s", mex.what());
     }
 }
 
diff --git a/qpid/cpp/bindings/qpid/ruby/ruby.i b/qpid/cpp/bindings/qpid/ruby/ruby.i
index 34388a2..a2f2ffa 100644
--- a/qpid/cpp/bindings/qpid/ruby/ruby.i
+++ b/qpid/cpp/bindings/qpid/ruby/ruby.i
@@ -34,86 +34,86 @@
     }
     catch(qpid::messaging::ConnectionError& error) {
       static VALUE merror = rb_define_class("ConnectionError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::TransportFailure& error) {
       static VALUE merror = rb_define_class("TransportFailure", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::TransactionAborted& error) {
       static VALUE merror = rb_define_class("TransactionAborted", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::TransactionError& error) {
       static VALUE merror = rb_define_class("TransactionError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::UnauthorizedAccess& error) {
       static VALUE merror = rb_define_class("UnauthorizedAccess", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::SessionError& error) {
       static VALUE merror = rb_define_class("SessionError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::TargetCapacityExceeded& error) {
       static VALUE merror = rb_define_class("TargetCapacityExceeded", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::SendError& error) {
       static VALUE merror = rb_define_class("SendError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::SenderError& error) {
       static VALUE merror = rb_define_class("SenderError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::NoMessageAvailable& error) {
       static VALUE merror = rb_define_class("NoMessageAvailable", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::FetchError& error) {
       static VALUE merror = rb_define_class("FetchError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::ReceiverError& error) {
       static VALUE merror = rb_define_class("ReceiverError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::InvalidOptionString& error) {
       static VALUE merror = rb_define_class("InvalidOptionString", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::KeyError& error) {
       static VALUE merror = rb_define_class("KeyError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::AssertionFailed& error) {
       static VALUE merror = rb_define_class("AssertionFailed", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::NotFound& error) {
       static VALUE merror = rb_define_class("NotFound", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::ResolutionError& error) {
       static VALUE merror = rb_define_class("ResolutionError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::MalformedAddress& error) {
       static VALUE merror = rb_define_class("MalformedAddress", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::AddressError& error) {
       static VALUE merror = rb_define_class("AddressError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::LinkError& error) {
       static VALUE merror = rb_define_class("LinkError", eMessagingError);
-      rb_raise(merror, error.what());
+      rb_raise(merror, "%s", error.what());
     }
     catch(qpid::messaging::MessagingException& error) {
-        rb_raise(eMessagingError, error.what());
+        rb_raise(eMessagingError, "%s", error.what());
     }
 }
 
diff --git a/qpid/cpp/include/qpid/swig_perl_typemaps.i b/qpid/cpp/include/qpid/swig_perl_typemaps.i
index f1425eb..6c0e6d8 100644
--- a/qpid/cpp/include/qpid/swig_perl_typemaps.i
+++ b/qpid/cpp/include/qpid/swig_perl_typemaps.i
@@ -120,7 +120,7 @@
             }
             }
         } catch (qpid::types::Exception& ex) {
-            Perl_croak(aTHX_ ex.what());
+          Perl_croak(aTHX_ "%s", ex.what());
         }
 
         if (!result)
diff --git a/qpid/cpp/include/qpid/swig_ruby_typemaps.i b/qpid/cpp/include/qpid/swig_ruby_typemaps.i
index 1a07cc8..4e07088 100644
--- a/qpid/cpp/include/qpid/swig_ruby_typemaps.i
+++ b/qpid/cpp/include/qpid/swig_ruby_typemaps.i
@@ -106,7 +106,7 @@
             }
         } catch (qpid::types::Exception& ex) {
             static VALUE error = rb_define_class("Error", rb_eStandardError);
-            rb_raise(error, ex.what());
+            rb_raise(error, "%s", ex.what());
         }
 
         return result;
-- 
1.9.0

